rg=opnsense-s2s-az-vpngw-bootstrap
location='centralindia'
vm_image=$(az vm image list -l $location -p thefreebsdfoundation --sku 14_2-release-zfs --all --query "[?offer=='freebsd-14_2'].urn" -o tsv | tr -d '\r') && echo $vm_image
az vm image terms accept --urn $vm_image -o none

hub1_vnet_name=hub1
hub1_vnet_address=10.1.0.0/16
hub1_nat_address=10.10.0.0/16
hub1_gw_subnet_address=10.1.0.0/24
hub1_gw_asn=65515
hub1_vm_subnet_name=vm
hub1_vm_subnet_address=10.1.1.0/24

onprem1_vnet_name='onprem1'
onprem1_vnet_address='10.2.0.0/16'
onprem1_fw_subnet_name='fw'
onprem1_fw_subnet_address='10.2.0.0/24'
onprem1_vm_subnet_name='vm'
onprem1_vm_subnet_address='10.2.1.0/24'
onprem1_fw_vti_ip=192.168.1.1
onprem1_fw_asn=65552

vm_size=Standard_B2ats_v2
admin_username=$(whoami)
admin_password='Test#123#123'
myip=$(curl -s4 https://ifconfig.co/)
psk=secret12345

function wait_until_finished {
     wait_interval=15
     resource_id=$1
     resource_name=$(echo $resource_id | cut -d/ -f 9)
     echo -e "\e[1;35mWaiting for resource $resource_name to finish provisioning...\e[0m"
     start_time=`date +%s`
     state=$(az resource show --id $resource_id --query properties.provisioningState -o tsv | tr -d '\r')
     until [[ "$state" == "Succeeded" ]] || [[ "$state" == "Failed" ]] || [[ -z "$state" ]]
     do
        sleep $wait_interval
        state=$(az resource show --id $resource_id --query properties.provisioningState -o tsv | tr -d '\r')
     done
     if [[ -z "$state" ]]
     then
        echo -e "\e[1;31mSomething really bad happened...\e[0m"
     else
        run_time=$(expr `date +%s` - $start_time)
        ((minutes=${run_time}/60))
        ((seconds=${run_time}%60))
        echo -e "\e[1;32mResource $resource_name provisioning state is $state, wait time $minutes minutes and $seconds seconds\e[0m"
     fi
}

cloud_init_file=cloud_init.sh
cat <<EOF > $cloud_init_file
#!/usr/local/bin/bash
sudo pkg update
sudo pkg upgrade -y
sed 's/#PermitRootLogin no/PermitRootLogin yes/g' /etc/ssh/sshd_config > /tmp/sshd_config
sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config_tmp
sudo mv /tmp/sshd_config /etc/ssh/sshd_config
sudo /etc/rc.d/sshd restart
fetch https://raw.githubusercontent.com/opnsense/update/master/src/bootstrap/opnsense-bootstrap.sh.in
sed 's/reboot/#reboot/' opnsense-bootstrap.sh.in >opnsense-bootstrap.sh.in.tmp
mv opnsense-bootstrap.sh.in.tmp opnsense-bootstrap.sh.in
sed 's/set -e/#set -e/' opnsense-bootstrap.sh.in >opnsense-bootstrap.sh.in.tmp
mv opnsense-bootstrap.sh.in.tmp opnsense-bootstrap.sh.in
sudo chmod +x opnsense-bootstrap.sh.in
sudo sh ~/opnsense-bootstrap.sh.in -y -r 25.7
sudo cp ~/config.xml /usr/local/etc/config.xml
sudo pkg update 
sudo pkg upgrade -y
sudo pkg install -y bash git py311-setuptools-63.1.0_3
sudo ln -s /usr/local/bin/python3.11 /usr/local/bin/python
git -c http.sslVerify=false clone https://github.com/Azure/WALinuxAgent.git
cd ~/WALinuxAgent/
git checkout v2.13.1.1
sudo python setup.py install --register-service --force
sudo reboot
EOF

# create resource group
echo -e "\e[1;36mCreating $rg resource group...\e[0m"
az group create -l $location -n $rg -o none

# onprem1 vnet
echo -e "\e[1;36mCreating $onprem1_vnet_name VNet...\e[0m"
az network vnet create -g $rg -n $onprem1_vnet_name -l $location --address-prefixes $onprem1_vnet_address --subnet-name $onprem1_vm_subnet_name --subnet-prefixes $onprem1_vm_subnet_address -o none
az network vnet subnet create -g $rg -n $onprem1_fw_subnet_name --address-prefixes $onprem1_fw_subnet_address --vnet-name $onprem1_vnet_name -o none

# Create onprem1 opnsense VM 
echo -e "\e[1;36mCreating $onprem1_vnet_name-fw VM...\e[0m"
az network public-ip create -g $rg -n $onprem1_vnet_name-fw -l $location --allocation-method Static --sku Basic -o none
az network nic create -g $rg -n $onprem1_vnet_name-fw-wan --subnet $onprem1_fw_subnet_name --vnet-name $onprem1_vnet_name --ip-forwarding true --private-ip-address 10.2.0.250 --public-ip-address $onprem1_vnet_name-fw -o none
az network nic create -g $rg -n $onprem1_vnet_name-fw-lan --subnet $onprem1_vm_subnet_name --vnet-name $onprem1_vnet_name --ip-forwarding true --private-ip-address 10.2.1.250 -o none
az vm create -g $rg -n $onprem1_vnet_name-fw --image $vm_image --nics $onprem1_vnet_name-fw-wan $onprem1_vnet_name-fw-lan --os-disk-name $onprem1_vnet_name-fw --size Standard_B2als_v2  --admin-username $admin_username --generate-ssh-keys --no-wait -o none
onprem1_fw_public_ip=$(az network public-ip show -g $rg -n $onprem1_vnet_name-fw --query 'ipAddress' -o tsv | tr -d '\r') && echo $onprem1_vnet_name-fw public ip: $onprem1_fw_public_ip
onprem1_fw_wan_private_ip=$(az network nic show -g $rg -n $onprem1_vnet_name-fw-wan --query ipConfigurations[].privateIPAddress -o tsv | tr -d '\r') && echo $onprem1_vnet_name-fw wan private IP: $onprem1_fw_wan_private_ip
onprem1_fw_lan_private_ip=$(az network nic show -g $rg -n $onprem1_vnet_name-fw-lan --query ipConfigurations[].privateIPAddress -o tsv | tr -d '\r') && echo $onprem1_vnet_name-fw lan private IP: $onprem1_fw_lan_private_ip

# hub1 vnet
echo -e "\e[1;36mCreating $hub1_vnet_name VNet...\e[0m"
az network vnet create -g $rg -n $hub1_vnet_name -l $location --address-prefixes $hub1_vnet_address --subnet-name $hub1_vm_subnet_name --subnet-prefixes $hub1_vm_subnet_address -o none
az network vnet subnet create -g $rg -n GatewaySubnet --address-prefixes $hub1_gw_subnet_address --vnet-name $hub1_vnet_name -o none

# hub1 VPN GW
echo -e "\e[1;36mDeploying $hub1_vnet_name-gw VPN Gateway...\e[0m"
az network public-ip create -g $rg -n $hub1_vnet_name-gw0 -l $location --allocation-method Static -o none
az network vnet-gateway create -g $rg -n $hub1_vnet_name-gw --public-ip-addresses $hub1_vnet_name-gw0 --vnet $hub1_vnet_name --sku VpnGw2 --vpn-gateway-generation Generation2 --gateway-type Vpn --vpn-type RouteBased --enable-private-ip true --no-wait

# onprem1 local network gateway
echo -e "\e[1;36mDeploying $onprem1_vnet_name-fw local gateway resource...\e[0m"
az network local-gateway create -g $rg -n $onprem1_vnet_name-fw -l $location --gateway-ip-address $onprem1_fw_public_ip --local-address-prefixes $onprem1_vnet_address $onprem1_fw_vti_ip/32 -o none

# hub1 vm
echo -e "\e[1;36mCreating $hub1_vnet_name VM...\e[0m"
az network nic create -g $rg -n "$hub1_vnet_name" -l $location --vnet-name $hub1_vnet_name --subnet $hub1_vm_subnet_name -o none
az vm create -g $rg -n $hub1_vnet_name -l $location --image Ubuntu2404 --nics "$hub1_vnet_name" --os-disk-name "$hub1_vnet_name" --size $vm_size --admin-username $admin_username --generate-ssh-keys --no-wait -o none
hub1_vm_ip=$(az network nic show -g $rg -n $hub1_vnet_name --query ipConfigurations[].privateIPAddress -o tsv | tr -d '\r') && echo $hub1_vnet_name vm private ip: $hub1_vm_ip

# onprem1 vm
echo -e "\e[1;36mDeploying $onprem1_vnet_name VM...\e[0m"
az network nic create -g $rg -n $onprem1_vnet_name -l $location --vnet-name $onprem1_vnet_name --subnet $onprem1_vm_subnet_name -o none
az vm create -g $rg -n $onprem1_vnet_name -l $location --image Ubuntu2404 --nics $onprem1_vnet_name --os-disk-name $onprem1_vnet_name --size $vm_size --admin-username $admin_username --generate-ssh-keys --no-wait
onprem1_vm_ip=$(az network nic show -g $rg -n $onprem1_vnet_name --query ipConfigurations[].privateIPAddress -o tsv | tr -d '\r') && echo $onprem1_vnet_name vm private ip: $onprem1_vm_ip

# onprem1 route table
echo -e "\e[1;36mDeploying $onprem1_vnet_name route table and attaching it to $onprem1_vm_subnet_name subnet...\e[0m"
az network route-table create -g $rg -n $onprem1_vnet_name -l $location -o none
az network route-table route create -g $rg -n to-$hub1_vnet_name --address-prefix $hub1_vnet_address --next-hop-type VirtualAppliance --route-table-name $onprem1_vnet_name --next-hop-ip-address $onprem1_fw_lan_private_ip -o none
az network vnet subnet update -g $rg -n $onprem1_vm_subnet_name --vnet-name $onprem1_vnet_name --route-table $onprem1_vnet_name -o none

while true; do
    state=$(az vm show -g $rg -n $onprem1_vnet_name-fw --query 'provisioningState' -o tsv | tr -d '\r')
    echo "Current provisioning state: $state"

    if [[ "$state" != "Creating" ]]; then
        echo "Provisioning completed with state: $state"
        break
    fi

    echo "VM is still being created... checking again in 5 seconds."
    sleep 5
done

# donwload initial config for opnsense 
config_file=~/config.xml
curl -o $config_file https://raw.githubusercontent.com/wshamroukh/opnsense-azure-vm/refs/heads/main/config.xml

# onprem1 opnsense bootstrap
echo -e "\e[1;36mCopying configuration files to $onprem1_vnet_name-fw and installing opnsense firewall...\e[0m"
scp -o StrictHostKeyChecking=no $cloud_init_file $config_file $admin_username@$onprem1_fw_public_ip:/home/$admin_username
ssh -o StrictHostKeyChecking=no $admin_username@$onprem1_fw_public_ip "chmod +x /home/$admin_username/cloud_init.sh && sh /home/$admin_username/cloud_init.sh"
rm $cloud_init_file $config_file

# waiting on hub1 vpn gw to finish deployment
hub1_gw_id=$(az network vnet-gateway show -g $rg -n $hub1_vnet_name-gw --query id -o tsv | tr -d '\r')
wait_until_finished $hub1_gw_id

# Getting hub1 VPN GW details
echo -e "\e[1;36mGetting $hub1_vnet_name-gw VPN Gateway details...\e[0m"
hub1_gw_pubip=$(az network vnet-gateway show -n $hub1_vnet_name-gw -g $rg --query 'bgpSettings.bgpPeeringAddresses[0].tunnelIpAddresses[0]' -o tsv | tr -d '\r') && echo $hub1_vnet_name-gw: $hub1_gw_pubip
hub_gw_priv_ip=$(az network vnet-gateway show -n $hub1_vnet_name-gw -g $rg --query 'bgpSettings.bgpPeeringAddresses[0].tunnelIpAddresses[1]' -o tsv | tr -d '\r') && echo $hub1_vnet_name-gw: $hub_gw_priv_ip

# hub1 route table
echo -e "\e[1;36mDeploying $hub1_vnet_name route table and attaching it to $hub1_vm_subnet_name subnet...\e[0m"
az network route-table create -g $rg -n $hub1_vnet_name -l $location --disable-bgp-route-propagation true -o none
az network route-table route create -g $rg -n to-$onprem1_vnet_name --address-prefix $onprem1_vnet_address --next-hop-type VirtualAppliance --route-table-name $hub1_vnet_name --next-hop-ip-address $hub_gw_priv_ip -o none
az network route-table route create -g $rg -n to-vti --address-prefix $onprem1_fw_vti_ip/32 --next-hop-type VirtualAppliance --route-table-name $hub1_vnet_name --next-hop-ip-address $hub_gw_priv_ip -o none
az network vnet subnet update -g $rg -n $hub1_vm_subnet_name --vnet-name $hub1_vnet_name --route-table $hub1_vnet_name -o none

# creating VPN connection between hub1 vpn gw and onprem1 fw
echo -e "\e[1;36mCreating $hub1_vnet_name-gw-to-$onprem1_vnet_name-fw-s2s-connection...\e[0m"
az network vpn-connection create -g $rg -n $hub1_vnet_name-gw-to-$onprem1_vnet_name-fw-s2s-connection --vnet-gateway1 $hub1_vnet_name-gw --local-gateway2 $onprem1_vnet_name-fw --shared-key $psk -o none
az network vpn-connection ipsec-policy add -g $rg --connection-name $hub1_vnet_name-gw-to-$onprem1_vnet_name-fw-s2s-connection --ike-encryption AES256 --ike-integrity SHA256 --dh-group DHGroup14 --ipsec-encryption AES256 --ipsec-integrity SHA256 --pfs-group None --sa-lifetime 27000 --sa-max-size 102400000 -o none

# Download config files
onprem1_config=~/site1_vti_bgp_config.xml
curl -o $onprem1_config https://raw.githubusercontent.com/wshamroukh/s2s-opnsense/refs/heads/main/opnsense-s2s-az-vpngw.xml
sed -i -e "s/13\.71\.38\.51/${onprem1_fw_public_ip}/g" -e "s/4\.247\.132\.11/${hub1_gw_pubip}/g" $onprem1_config

# Copying config files to site1 pfsense
echo -e "\e[1;36mCopying configuration files to $onprem1_vnet_name-fw and installing opnsense firewall...\e[0m"
ssh-keygen -R $onprem1_fw_public_ip
scp -o StrictHostKeyChecking=no ~/.ssh/* root@$onprem1_fw_public_ip:/root/.ssh/
scp -o StrictHostKeyChecking=no $onprem1_config root@$onprem1_fw_public_ip:/conf/config.xml
echo -e "\e[1;36mRebooting $onprem1_vnet_name-fw after importing the config file...\e[0m"
ssh -o StrictHostKeyChecking=no root@$onprem1_fw_public_ip "sudo reboot"

echo -e "\e[1;36mWaiting on $onprem1_vnet_name-fw to become up...\e[0m"
sleep 60 

echo -e "\e[1;36mChecking connectivity from $onprem1_vnet_name-fw to rest of network...\e[0m"
ssh -o StrictHostKeyChecking=no root@$onprem1_fw_public_ip "ping -c 3 $hub1_vm_ip"

echo -e "\e[1;36mChecking connectivity from $hub1_vnet_name to rest of network...\e[0m"
ssh -o StrictHostKeyChecking=no root@$onprem1_fw_public_ip "ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $admin_username@$hub1_vm_ip 'ping -c 3 $onprem1_vm_ip && ping -c 3 $onprem1_fw_lan_private_ip'"

echo -e "\e[1;36mChecking connectivity from $onprem1_vnet_name to rest of network...\e[0m"
ssh -o StrictHostKeyChecking=no root@$onprem1_fw_public_ip "ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $admin_username@$onprem1_vm_ip 'ping -c 3 $hub1_vm_ip && ping -c 3 $onprem1_fw_lan_private_ip'"

# az group delete -n $rg -y --no-wait